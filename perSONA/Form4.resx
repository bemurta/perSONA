<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>                     Criar novo paciente:

1. Clique em "Criar Paciente" localizado a direita 
na página inicial, ou em "Novo Paciente" 
localizado no rodapé da página inicial;

2. Uma nova tela chamada "Módulo de 
Gerenciamento de Paciente" irá se abrir;

3. Agora basta preencher os dados do paciente 
e salvar as alterações.

             Ver dados ou deletar pacientes:             

1. Selecione o paciente que desejar na lista da 
página inicial que está localizada ao lado 
esquerdo dos botões de criar, ver e deletar 
paciente;

2. Clique no botão que indica a ação que 
queira realizar.

3. É importante ressaltar que ao ver dados de
paciente podemos navegar pelo cabeçalho da
página, vendo os resultados de exames já
realizados pelo mesmo</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>                Configurar arquivos de áudio:             

1. Acesse as configurações que estão no canto 
superior esquerdo da página inicial, após isso 
clique em "Área de  edição de arquivos de áudio";

2. Após isso selecione a lista de áudio que desejar
(os áudios devem estar no formato wav);

3. A direita do botão de seleção do arquivo de 
áudio podemos digitar a sentença do áudio;

         Alterar pasta de destino dos resultados:      

1. Basta acessar as configurações, localizada no 
canto superior esquerdo da página inicial;

2. Clique em "Pasta destino de resultados"

3. Escolha a pasta e salve a alteração.

                               Contato:                                

1. Caso tenha sugestões ou reclamações clique
em "Contato", no cabeçalho da página inicial

2. Informe seu e-mail assunto e texto, e envie</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>           Inicialização do VA (IMPORTANTE):

1. Para fazer os teste o VA  (simulador de cenas
acústicas) deve estar conectado;

2. Para verificar conexão, vá a página inicial e 
clique em "Mostrar / Esconde painel de controle"

3. Se o botão "Conectar VA" estiver na cor verde,
VA conectado,  se estiver vermelho, siga os 
próximos passos;

4. Clique em "Iniciar VA"

5. Então clique em "Conectar VA"

                     Realização de testes:

1. Abra a página inicial e escolha um dos itens
da "Avaliação de percepção de fala" localizada
no canto inferior direito da página;

2. Realize as configurações básicas da fala e 
ruido, após isso inicie os testes;

3. Reproduza os áudios escolhidos e em seguida
selecione as sentenças que o paciente acertou.</value>
  </data>
</root>